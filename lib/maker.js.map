{"version":3,"file":"maker.js","sources":["../node_modules/ret/lib/types.js","../node_modules/ret/lib/sets.js","../node_modules/ret/lib/util.js","../node_modules/ret/lib/positions.js","../node_modules/ret/lib/index.js","../node_modules/discontinuous-range/index.js","../node_modules/randexp/lib/randexp.js"],"sourcesContent":["module.exports = {\n  ROOT       : 0,\n  GROUP      : 1,\n  POSITION   : 2,\n  SET        : 3,\n  RANGE      : 4,\n  REPETITION : 5,\n  REFERENCE  : 6,\n  CHAR       : 7,\n};\n","var types = require('./types');\n\nvar INTS = function() {\n return [{ type: types.RANGE , from: 48, to: 57 }];\n};\n\nvar WORDS = function() {\n return [\n    { type: types.CHAR, value: 95 },\n    { type: types.RANGE, from: 97, to: 122 },\n    { type: types.RANGE, from: 65, to: 90 }\n  ].concat(INTS());\n};\n\nvar WHITESPACE = function() {\n return [\n    { type: types.CHAR, value: 9 },\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 11 },\n    { type: types.CHAR, value: 12 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 32 },\n    { type: types.CHAR, value: 160 },\n    { type: types.CHAR, value: 5760 },\n    { type: types.CHAR, value: 6158 },\n    { type: types.CHAR, value: 8192 },\n    { type: types.CHAR, value: 8193 },\n    { type: types.CHAR, value: 8194 },\n    { type: types.CHAR, value: 8195 },\n    { type: types.CHAR, value: 8196 },\n    { type: types.CHAR, value: 8197 },\n    { type: types.CHAR, value: 8198 },\n    { type: types.CHAR, value: 8199 },\n    { type: types.CHAR, value: 8200 },\n    { type: types.CHAR, value: 8201 },\n    { type: types.CHAR, value: 8202 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n    { type: types.CHAR, value: 8239 },\n    { type: types.CHAR, value: 8287 },\n    { type: types.CHAR, value: 12288 },\n    { type: types.CHAR, value: 65279 }\n  ];\n};\n\nvar NOTANYCHAR = function() {\n  return [\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n  ];\n};\n\n// Predefined class objects.\nexports.words = function() {\n  return { type: types.SET, set: WORDS(), not: false };\n};\n\nexports.notWords = function() {\n  return { type: types.SET, set: WORDS(), not: true };\n};\n\nexports.ints = function() {\n  return { type: types.SET, set: INTS(), not: false };\n};\n\nexports.notInts = function() {\n  return { type: types.SET, set: INTS(), not: true };\n};\n\nexports.whitespace = function() {\n  return { type: types.SET, set: WHITESPACE(), not: false };\n};\n\nexports.notWhitespace = function() {\n  return { type: types.SET, set: WHITESPACE(), not: true };\n};\n\nexports.anyChar = function() {\n  return { type: types.SET, set: NOTANYCHAR(), not: true };\n};\n","var types = require('./types');\nvar sets  = require('./sets');\n\n\n// All of these are private and only used by randexp.\n// It's assumed that they will always be called with the correct input.\n\nvar CTRL = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^ ?';\nvar SLSH = { '0': 0, 't': 9, 'n': 10, 'v': 11, 'f': 12, 'r': 13 };\n\n/**\n * Finds character representations in str and convert all to\n * their respective characters\n *\n * @param {String} str\n * @return {String}\n */\nexports.strToChars = function(str) {\n  /* jshint maxlen: false */\n  var chars_regex = /(\\[\\\\b\\])|(\\\\)?\\\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z\\[\\\\\\]\\^?])|([0tnvfr]))/g;\n  str = str.replace(chars_regex, function(s, b, lbs, a16, b16, c8, dctrl, eslsh) {\n    if (lbs) {\n      return s;\n    }\n\n    var code = b     ? 8 :\n               a16   ? parseInt(a16, 16) :\n               b16   ? parseInt(b16, 16) :\n               c8    ? parseInt(c8,   8) :\n               dctrl ? CTRL.indexOf(dctrl) :\n               SLSH[eslsh];\n\n    var c = String.fromCharCode(code);\n\n    // Escape special regex characters.\n    if (/[\\[\\]{}\\^$.|?*+()]/.test(c)) {\n      c = '\\\\' + c;\n    }\n\n    return c;\n  });\n\n  return str;\n};\n\n\n/**\n * turns class into tokens\n * reads str until it encounters a ] not preceeded by a \\\n *\n * @param {String} str\n * @param {String} regexpStr\n * @return {Array.<Array.<Object>, Number>}\n */\nexports.tokenizeClass = function(str, regexpStr) {\n  /* jshint maxlen: false */\n  var tokens = [];\n  var regexp = /\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\)(.)|([^\\]\\\\]))-(?:\\\\)?([^\\]]))|(\\])|(?:\\\\)?(.)/g;\n  var rs, c;\n\n\n  while ((rs = regexp.exec(str)) != null) {\n    if (rs[1]) {\n      tokens.push(sets.words());\n\n    } else if (rs[2]) {\n      tokens.push(sets.ints());\n\n    } else if (rs[3]) {\n      tokens.push(sets.whitespace());\n\n    } else if (rs[4]) {\n      tokens.push(sets.notWords());\n\n    } else if (rs[5]) {\n      tokens.push(sets.notInts());\n\n    } else if (rs[6]) {\n      tokens.push(sets.notWhitespace());\n\n    } else if (rs[7]) {\n      tokens.push({\n        type: types.RANGE,\n        from: (rs[8] || rs[9]).charCodeAt(0),\n          to: rs[10].charCodeAt(0),\n      });\n\n    } else if (c = rs[12]) {\n      tokens.push({\n        type: types.CHAR,\n        value: c.charCodeAt(0),\n      });\n\n    } else {\n      return [tokens, regexp.lastIndex];\n    }\n  }\n\n  exports.error(regexpStr, 'Unterminated character class');\n};\n\n\n/**\n * Shortcut to throw errors.\n *\n * @param {String} regexp\n * @param {String} msg\n */\nexports.error = function(regexp, msg) {\n  throw new SyntaxError('Invalid regular expression: /' + regexp + '/: ' + msg);\n};\n","var types = require('./types');\n\nexports.wordBoundary = function() {\n  return { type: types.POSITION, value: 'b' };\n};\n\nexports.nonWordBoundary = function() {\n  return { type: types.POSITION, value: 'B' };\n};\n\nexports.begin = function() {\n  return { type: types.POSITION, value: '^' };\n};\n\nexports.end = function() {\n  return { type: types.POSITION, value: '$' };\n};\n","var util      = require('./util');\nvar types     = require('./types');\nvar sets      = require('./sets');\nvar positions = require('./positions');\n\n\nmodule.exports = function(regexpStr) {\n  var i = 0, l, c,\n      start = { type: types.ROOT, stack: []},\n\n      // Keep track of last clause/group and stack.\n      lastGroup = start,\n      last = start.stack,\n      groupStack = [];\n\n\n  var repeatErr = function(i) {\n    util.error(regexpStr, 'Nothing to repeat at column ' + (i - 1));\n  };\n\n  // Decode a few escaped characters.\n  var str = util.strToChars(regexpStr);\n  l = str.length;\n\n  // Iterate through each character in string.\n  while (i < l) {\n    c = str[i++];\n\n    switch (c) {\n      // Handle escaped characters, inclues a few sets.\n      case '\\\\':\n        c = str[i++];\n\n        switch (c) {\n          case 'b':\n            last.push(positions.wordBoundary());\n            break;\n\n          case 'B':\n            last.push(positions.nonWordBoundary());\n            break;\n\n          case 'w':\n            last.push(sets.words());\n            break;\n\n          case 'W':\n            last.push(sets.notWords());\n            break;\n\n          case 'd':\n            last.push(sets.ints());\n            break;\n\n          case 'D':\n            last.push(sets.notInts());\n            break;\n\n          case 's':\n            last.push(sets.whitespace());\n            break;\n\n          case 'S':\n            last.push(sets.notWhitespace());\n            break;\n\n          default:\n            // Check if c is integer.\n            // In which case it's a reference.\n            if (/\\d/.test(c)) {\n              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });\n\n            // Escaped character.\n            } else {\n              last.push({ type: types.CHAR, value: c.charCodeAt(0) });\n            }\n        }\n\n        break;\n\n\n      // Positionals.\n      case '^':\n          last.push(positions.begin());\n        break;\n\n      case '$':\n          last.push(positions.end());\n        break;\n\n\n      // Handle custom sets.\n      case '[':\n        // Check if this class is 'anti' i.e. [^abc].\n        var not;\n        if (str[i] === '^') {\n          not = true;\n          i++;\n        } else {\n          not = false;\n        }\n\n        // Get all the characters in class.\n        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);\n\n        // Increase index by length of class.\n        i += classTokens[1];\n        last.push({\n          type: types.SET,\n          set: classTokens[0],\n          not: not,\n        });\n\n        break;\n\n\n      // Class of any character except \\n.\n      case '.':\n        last.push(sets.anyChar());\n        break;\n\n\n      // Push group onto stack.\n      case '(':\n        // Create group.\n        var group = {\n          type: types.GROUP,\n          stack: [],\n          remember: true,\n        };\n\n        c = str[i];\n\n        // If if this is a special kind of group.\n        if (c === '?') {\n          c = str[i + 1];\n          i += 2;\n\n          // Match if followed by.\n          if (c === '=') {\n            group.followedBy = true;\n\n          // Match if not followed by.\n          } else if (c === '!') {\n            group.notFollowedBy = true;\n\n          } else if (c !== ':') {\n            util.error(regexpStr,\n              'Invalid group, character \\'' + c +\n              '\\' after \\'?\\' at column ' + (i - 1));\n          }\n\n          group.remember = false;\n        }\n\n        // Insert subgroup into current group stack.\n        last.push(group);\n\n        // Remember the current group for when the group closes.\n        groupStack.push(lastGroup);\n\n        // Make this new group the current group.\n        lastGroup = group;\n        last = group.stack;\n        break;\n\n\n      // Pop group out of stack.\n      case ')':\n        if (groupStack.length === 0) {\n          util.error(regexpStr, 'Unmatched ) at column ' + (i - 1));\n        }\n        lastGroup = groupStack.pop();\n\n        // Check if this group has a PIPE.\n        // To get back the correct last stack.\n        last = lastGroup.options ?\n          lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;\n        break;\n\n\n      // Use pipe character to give more choices.\n      case '|':\n        // Create array where options are if this is the first PIPE\n        // in this clause.\n        if (!lastGroup.options) {\n          lastGroup.options = [lastGroup.stack];\n          delete lastGroup.stack;\n        }\n\n        // Create a new stack and add to options for rest of clause.\n        var stack = [];\n        lastGroup.options.push(stack);\n        last = stack;\n        break;\n\n\n      // Repetition.\n      // For every repetition, remove last element from last stack\n      // then insert back a RANGE object.\n      // This design is chosen because there could be more than\n      // one repetition symbols in a regex i.e. `a?+{2,3}`.\n      case '{':\n        var rs = /^(\\d+)(,(\\d+)?)?\\}/.exec(str.slice(i)), min, max;\n        if (rs !== null) {\n          if (last.length === 0) {\n            repeatErr(i);\n          }\n          min = parseInt(rs[1], 10);\n          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;\n          i += rs[0].length;\n\n          last.push({\n            type: types.REPETITION,\n            min: min,\n            max: max,\n            value: last.pop(),\n          });\n        } else {\n          last.push({\n            type: types.CHAR,\n            value: 123,\n          });\n        }\n        break;\n\n      case '?':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 0,\n          max: 1,\n          value: last.pop(),\n        });\n        break;\n\n      case '+':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 1,\n          max: Infinity,\n          value: last.pop(),\n        });\n        break;\n\n      case '*':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 0,\n          max: Infinity,\n          value: last.pop(),\n        });\n        break;\n\n\n      // Default is a character that is not `\\[](){}?+*^$`.\n      default:\n        last.push({\n          type: types.CHAR,\n          value: c.charCodeAt(0),\n        });\n    }\n\n  }\n\n  // Check if any groups have not been closed.\n  if (groupStack.length !== 0) {\n    util.error(regexpStr, 'Unterminated group');\n  }\n\n  return start;\n};\n\nmodule.exports.types = types;\n","//protected helper class\nfunction _SubRange(low, high) {\n    this.low = low;\n    this.high = high;\n    this.length = 1 + high - low;\n}\n\n_SubRange.prototype.overlaps = function (range) {\n    return !(this.high < range.low || this.low > range.high);\n};\n\n_SubRange.prototype.touches = function (range) {\n    return !(this.high + 1 < range.low || this.low - 1 > range.high);\n};\n\n//returns inclusive combination of _SubRanges as a _SubRange\n_SubRange.prototype.add = function (range) {\n    return this.touches(range) && new _SubRange(Math.min(this.low, range.low), Math.max(this.high, range.high));\n};\n\n//returns subtraction of _SubRanges as an array of _SubRanges (there's a case where subtraction divides it in 2)\n_SubRange.prototype.subtract = function (range) {\n    if (!this.overlaps(range)) return false;\n    if (range.low <= this.low && range.high >= this.high) return [];\n    if (range.low > this.low && range.high < this.high) return [new _SubRange(this.low, range.low - 1), new _SubRange(range.high + 1, this.high)];\n    if (range.low <= this.low) return [new _SubRange(range.high + 1, this.high)];\n    return [new _SubRange(this.low, range.low - 1)];\n};\n\n_SubRange.prototype.toString = function () {\n    if (this.low == this.high) return this.low.toString();\n    return this.low + '-' + this.high;\n};\n\n_SubRange.prototype.clone = function () {\n    return new _SubRange(this.low, this.high);\n};\n\n\n\n\nfunction DiscontinuousRange(a, b) {\n    if (this instanceof DiscontinuousRange) {\n        this.ranges = [];\n        this.length = 0;\n        if (a !== undefined) this.add(a, b);\n    } else {\n        return new DiscontinuousRange(a, b);\n    }\n}\n\nfunction _update_length(self) {\n    self.length = self.ranges.reduce(function (previous, range) {return previous + range.length}, 0);\n}\n\nDiscontinuousRange.prototype.add = function (a, b) {\n    var self = this;\n    function _add(subrange) {\n        var new_ranges = [];\n        var i = 0;\n        while (i < self.ranges.length && !subrange.touches(self.ranges[i])) {\n            new_ranges.push(self.ranges[i].clone());\n            i++;\n        }\n        while (i < self.ranges.length && subrange.touches(self.ranges[i])) {\n            subrange = subrange.add(self.ranges[i]);\n            i++;\n        }\n        new_ranges.push(subrange);\n        while (i < self.ranges.length) {\n            new_ranges.push(self.ranges[i].clone());\n            i++;\n        }\n        self.ranges = new_ranges;\n        _update_length(self);\n    }\n\n    if (a instanceof DiscontinuousRange) {\n        a.ranges.forEach(_add);\n    } else {\n        if (a instanceof _SubRange) {\n            _add(a);\n        } else {\n            if (b === undefined) b = a;\n            _add(new _SubRange(a, b));\n        }\n    }\n    return this;\n};\n\nDiscontinuousRange.prototype.subtract = function (a, b) {\n    var self = this;\n    function _subtract(subrange) {\n        var new_ranges = [];\n        var i = 0;\n        while (i < self.ranges.length && !subrange.overlaps(self.ranges[i])) {\n            new_ranges.push(self.ranges[i].clone());\n            i++;\n        }\n        while (i < self.ranges.length && subrange.overlaps(self.ranges[i])) {\n            new_ranges = new_ranges.concat(self.ranges[i].subtract(subrange));\n            i++;\n        }\n        while (i < self.ranges.length) {\n            new_ranges.push(self.ranges[i].clone());\n            i++;\n        }\n        self.ranges = new_ranges;\n        _update_length(self);\n    }\n    if (a instanceof DiscontinuousRange) {\n        a.ranges.forEach(_subtract);\n    } else {\n        if (a instanceof _SubRange) {\n            _subtract(a);\n        } else {\n            if (b === undefined) b = a;\n            _subtract(new _SubRange(a, b));\n        }\n    }\n    return this;\n};\n\n\nDiscontinuousRange.prototype.index = function (index) {\n    var i = 0;\n    while (i < this.ranges.length && this.ranges[i].length <= index) {\n        index -= this.ranges[i].length;\n        i++;\n    }\n    if (i >= this.ranges.length) return null;\n    return this.ranges[i].low + index;\n};\n\n\nDiscontinuousRange.prototype.toString = function () {\n    return '[ ' + this.ranges.join(', ') + ' ]'\n};\n\nDiscontinuousRange.prototype.clone = function () {\n    return new DiscontinuousRange(this);\n};\n\nmodule.exports = DiscontinuousRange;\n","var ret = require('ret');\nvar DRange = require('discontinuous-range');\nvar types = ret.types;\n\n\n/**\n * If code is alphabetic, converts to other case.\n * If not alphabetic, returns back code.\n *\n * @param {Number} code\n * @return {Number}\n */\nfunction toOtherCase(code) {\n  return code + (97 <= code && code <= 122 ? -32 :\n                 65 <= code && code <= 90  ?  32 : 0);\n}\n\n\n/**\n * Randomly returns a true or false value.\n *\n * @return {Boolean}\n */\nfunction randBool() {\n  return !this.randInt(0, 1);\n}\n\n\n/**\n * Randomly selects and returns a value from the array.\n *\n * @param {Array.<Object>} arr\n * @return {Object}\n */\nfunction randSelect(arr) {\n  if (arr instanceof DRange) {\n    return arr.index(this.randInt(0, arr.length - 1));\n  }\n  return arr[this.randInt(0, arr.length - 1)];\n}\n\n\n/**\n * expands a token to a DiscontinuousRange of characters which has a\n * length and an index function (for random selecting)\n *\n * @param {Object} token\n * @return {DiscontinuousRange}\n */\nfunction expand(token) {\n  if (token.type === ret.types.CHAR) {\n    return new DRange(token.value);\n  } else if (token.type === ret.types.RANGE) {\n    return new DRange(token.from, token.to);\n  } else {\n    var drange = new DRange();\n    for (var i = 0; i < token.set.length; i++) {\n      var subrange = expand.call(this, token.set[i]);\n      drange.add(subrange);\n      if (this.ignoreCase) {\n        for (var j = 0; j < subrange.length; j++) {\n          var code = subrange.index(j);\n          var otherCaseCode = toOtherCase(code);\n          if (code !== otherCaseCode) {\n            drange.add(otherCaseCode);\n          }\n        }\n      }\n    }\n    if (token.not) {\n      return this.defaultRange.clone().subtract(drange);\n    } else {\n      return drange;\n    }\n  }\n}\n\n\n/**\n * Checks if some custom properties have been set for this regexp.\n *\n * @param {RandExp} randexp\n * @param {RegExp} regexp\n */\nfunction checkCustom(randexp, regexp) {\n  if (typeof regexp.max === 'number') {\n    randexp.max = regexp.max;\n  }\n  if (regexp.defaultRange instanceof DRange) {\n    randexp.defaultRange = regexp.defaultRange;\n  }\n  if (typeof regexp.randInt === 'function') {\n    randexp.randInt = regexp.randInt;\n  }\n}\n\n\n/**\n * @constructor\n * @param {RegExp|String} regexp\n * @param {String} m\n */\nvar RandExp = module.exports = function(regexp, m) {\n  this.defaultRange = this.defaultRange.clone();\n  if (regexp instanceof RegExp) {\n    this.ignoreCase = regexp.ignoreCase;\n    this.multiline = regexp.multiline;\n    checkCustom(this, regexp);\n    regexp = regexp.source;\n\n  } else if (typeof regexp === 'string') {\n    this.ignoreCase = m && m.indexOf('i') !== -1;\n    this.multiline = m && m.indexOf('m') !== -1;\n  } else {\n    throw new Error('Expected a regexp or string');\n  }\n\n  this.tokens = ret(regexp);\n};\n\n\n// When a repetitional token has its max set to Infinite,\n// randexp won't actually generate a random amount between min and Infinite\n// instead it will see Infinite as min + 100.\nRandExp.prototype.max = 100;\n\n\n// Generates the random string.\nRandExp.prototype.gen = function() {\n  return gen.call(this, this.tokens, []);\n};\n\n\n// Enables use of randexp with a shorter call.\nRandExp.randexp = function(regexp, m) {\n  var randexp;\n  if (regexp._randexp === undefined) {\n    randexp = new RandExp(regexp, m);\n    regexp._randexp = randexp;\n  } else {\n    randexp = regexp._randexp;\n  }\n  checkCustom(randexp, regexp);\n  return randexp.gen();\n};\n\n\n// This enables sugary /regexp/.gen syntax.\nRandExp.sugar = function() {\n  /* jshint freeze:false */\n  RegExp.prototype.gen = function() {\n    return RandExp.randexp(this);\n  };\n};\n\n// This allows expanding to include additional characters\n// for instance: RandExp.defaultRange.add(0, 65535);\nRandExp.prototype.defaultRange = new DRange(32, 126);\n\n\n/**\n * Randomly generates and returns a number between a and b (inclusive).\n *\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n */\nRandExp.prototype.randInt = function(a, b) {\n  return a + Math.floor(Math.random() * (1 + b - a));\n};\n\n\n/**\n * Generate random string modeled after given tokens.\n *\n * @param {Object} token\n * @param {Array.<String>} groups\n * @return {String}\n */\nfunction gen(token, groups) {\n  var stack, str, n, i, l;\n\n  switch (token.type) {\n\n\n    case types.ROOT:\n    case types.GROUP:\n      // Ignore lookaheads for now.\n      if (token.followedBy || token.notFollowedBy) { return ''; }\n\n      // Insert placeholder until group string is generated.\n      if (token.remember && token.groupNumber === undefined) {\n        token.groupNumber = groups.push(null) - 1;\n      }\n\n      stack = token.options ?\n        randSelect.call(this, token.options) : token.stack;\n\n      str = '';\n      for (i = 0, l = stack.length; i < l; i++) {\n        str += gen.call(this, stack[i], groups);\n      }\n\n      if (token.remember) {\n        groups[token.groupNumber] = str;\n      }\n      return str;\n\n\n    case types.POSITION:\n      // Do nothing for now.\n      return '';\n\n\n    case types.SET:\n      var expandedSet = expand.call(this, token);\n      if (!expandedSet.length) { return ''; }\n      return String.fromCharCode(randSelect.call(this, expandedSet));\n\n\n    case types.REPETITION:\n      // Randomly generate number between min and max.\n      n = this.randInt(token.min,\n              token.max === Infinity ? token.min + this.max : token.max);\n\n      str = '';\n      for (i = 0; i < n; i++) {\n        str += gen.call(this, token.value, groups);\n      }\n\n      return str;\n\n\n    case types.REFERENCE:\n      return groups[token.value - 1] || '';\n\n\n    case types.CHAR:\n      var code = this.ignoreCase && randBool.call(this) ?\n        toOtherCase(token.value) : token.value;\n      return String.fromCharCode(code);\n  }\n}\n\n\n"],"names":["ROOT","GROUP","POSITION","SET","RANGE","REPETITION","REFERENCE","CHAR","INTS","type","types","from","to","WORDS","value","concat","WHITESPACE","set","not","SLSH","0","t","n","v","f","r","exports","str","replace","s","b","lbs","a16","b16","c8","dctrl","eslsh","code","parseInt","indexOf","c","String","fromCharCode","test","regexpStr","rs","tokens","regexp","exec","push","sets","charCodeAt","lastIndex","error","msg","SyntaxError","l","i","start","stack","lastGroup","last","groupStack","repeatErr","util","strToChars","length","positions","classTokens","tokenizeClass","slice","group","remember","followedBy","notFollowedBy","pop","options","min","max","Infinity","_SubRange","low","high","this","DiscontinuousRange","a","ranges","undefined","add","_update_length","self","reduce","previous","range","prototype","overlaps","touches","Math","subtract","toString","clone","_add","subrange","new_ranges","forEach","_subtract","index","join","ret","toOtherCase","randSelect","arr","DRange","randInt","checkCustom","randexp","defaultRange","RandExp","module","m","RegExp","ignoreCase","multiline","source","Error","gen","token","groups","groupNumber","call","expandedSet","expand","drange","j","otherCaseCode","_randexp","sugar","floor","random"],"mappings":"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"}