{"version":3,"file":"shai.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/ret/lib/types.js","../node_modules/ret/lib/sets.js","../node_modules/ret/lib/util.js","../node_modules/ret/lib/positions.js","../node_modules/ret/lib/index.js","../node_modules/drange/lib/index.js","../node_modules/randexp/lib/randexp.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","module.exports = {\n  ROOT       : 0,\n  GROUP      : 1,\n  POSITION   : 2,\n  SET        : 3,\n  RANGE      : 4,\n  REPETITION : 5,\n  REFERENCE  : 6,\n  CHAR       : 7,\n};\n","const types = require('./types');\n\nconst INTS = () => [{ type: types.RANGE , from: 48, to: 57 }];\n\nconst WORDS = () => {\n  return [\n    { type: types.CHAR, value: 95 },\n    { type: types.RANGE, from: 97, to: 122 },\n    { type: types.RANGE, from: 65, to: 90 }\n  ].concat(INTS());\n};\n\nconst WHITESPACE = () => {\n  return [\n    { type: types.CHAR, value: 9 },\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 11 },\n    { type: types.CHAR, value: 12 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 32 },\n    { type: types.CHAR, value: 160 },\n    { type: types.CHAR, value: 5760 },\n    { type: types.RANGE, from: 8192, to: 8202 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n    { type: types.CHAR, value: 8239 },\n    { type: types.CHAR, value: 8287 },\n    { type: types.CHAR, value: 12288 },\n    { type: types.CHAR, value: 65279 }\n  ];\n};\n\nconst NOTANYCHAR = () => {\n  return [\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n  ];\n};\n\n// Predefined class objects.\nexports.words = () => ({ type: types.SET, set: WORDS(), not: false });\nexports.notWords = () => ({ type: types.SET, set: WORDS(), not: true });\nexports.ints = () => ({ type: types.SET, set: INTS(), not: false });\nexports.notInts = () => ({ type: types.SET, set: INTS(), not: true });\nexports.whitespace = () => ({ type: types.SET, set: WHITESPACE(), not: false });\nexports.notWhitespace = () => ({ type: types.SET, set: WHITESPACE(), not: true });\nexports.anyChar = () => ({ type: types.SET, set: NOTANYCHAR(), not: true });\n","const types = require('./types');\nconst sets  = require('./sets');\n\n\nconst CTRL = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^ ?';\nconst SLSH = { '0': 0, 't': 9, 'n': 10, 'v': 11, 'f': 12, 'r': 13 };\n\n/**\n * Finds character representations in str and convert all to\n * their respective characters\n *\n * @param {String} str\n * @return {String}\n */\nexports.strToChars = function(str) {\n  /* jshint maxlen: false */\n  var chars_regex = /(\\[\\\\b\\])|(\\\\)?\\\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z[\\\\\\]^?])|([0tnvfr]))/g;\n  str = str.replace(chars_regex, function(s, b, lbs, a16, b16, c8, dctrl, eslsh) {\n    if (lbs) {\n      return s;\n    }\n\n    var code = b ? 8 :\n      a16   ? parseInt(a16, 16) :\n      b16   ? parseInt(b16, 16) :\n      c8    ? parseInt(c8,   8) :\n      dctrl ? CTRL.indexOf(dctrl) :\n      SLSH[eslsh];\n\n    var c = String.fromCharCode(code);\n\n    // Escape special regex characters.\n    if (/[[\\]{}^$.|?*+()]/.test(c)) {\n      c = '\\\\' + c;\n    }\n\n    return c;\n  });\n\n  return str;\n};\n\n\n/**\n * turns class into tokens\n * reads str until it encounters a ] not preceeded by a \\\n *\n * @param {String} str\n * @param {String} regexpStr\n * @return {Array.<Array.<Object>, Number>}\n */\nexports.tokenizeClass = (str, regexpStr) => {\n  /* jshint maxlen: false */\n  var tokens = [];\n  var regexp = /\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\)(.)|([^\\]\\\\]))-(?:\\\\)?([^\\]]))|(\\])|(?:\\\\)?([^])/g;\n  var rs, c;\n\n\n  while ((rs = regexp.exec(str)) != null) {\n    if (rs[1]) {\n      tokens.push(sets.words());\n\n    } else if (rs[2]) {\n      tokens.push(sets.ints());\n\n    } else if (rs[3]) {\n      tokens.push(sets.whitespace());\n\n    } else if (rs[4]) {\n      tokens.push(sets.notWords());\n\n    } else if (rs[5]) {\n      tokens.push(sets.notInts());\n\n    } else if (rs[6]) {\n      tokens.push(sets.notWhitespace());\n\n    } else if (rs[7]) {\n      tokens.push({\n        type: types.RANGE,\n        from: (rs[8] || rs[9]).charCodeAt(0),\n        to: rs[10].charCodeAt(0),\n      });\n\n    } else if ((c = rs[12])) {\n      tokens.push({\n        type: types.CHAR,\n        value: c.charCodeAt(0),\n      });\n\n    } else {\n      return [tokens, regexp.lastIndex];\n    }\n  }\n\n  exports.error(regexpStr, 'Unterminated character class');\n};\n\n\n/**\n * Shortcut to throw errors.\n *\n * @param {String} regexp\n * @param {String} msg\n */\nexports.error = (regexp, msg) => {\n  throw new SyntaxError('Invalid regular expression: /' + regexp + '/: ' + msg);\n};\n","const types = require('./types');\nexports.wordBoundary = () => ({ type: types.POSITION, value: 'b' });\nexports.nonWordBoundary = () => ({ type: types.POSITION, value: 'B' });\nexports.begin = () => ({ type: types.POSITION, value: '^' });\nexports.end = () => ({ type: types.POSITION, value: '$' });\n","const util      = require('./util');\nconst types     = require('./types');\nconst sets      = require('./sets');\nconst positions = require('./positions');\n\n\nmodule.exports = (regexpStr) => {\n  var i = 0, l, c,\n    start = { type: types.ROOT, stack: []},\n\n    // Keep track of last clause/group and stack.\n    lastGroup = start,\n    last = start.stack,\n    groupStack = [];\n\n\n  var repeatErr = (i) => {\n    util.error(regexpStr, `Nothing to repeat at column ${i - 1}`);\n  };\n\n  // Decode a few escaped characters.\n  var str = util.strToChars(regexpStr);\n  l = str.length;\n\n  // Iterate through each character in string.\n  while (i < l) {\n    c = str[i++];\n\n    switch (c) {\n      // Handle escaped characters, inclues a few sets.\n      case '\\\\':\n        c = str[i++];\n\n        switch (c) {\n          case 'b':\n            last.push(positions.wordBoundary());\n            break;\n\n          case 'B':\n            last.push(positions.nonWordBoundary());\n            break;\n\n          case 'w':\n            last.push(sets.words());\n            break;\n\n          case 'W':\n            last.push(sets.notWords());\n            break;\n\n          case 'd':\n            last.push(sets.ints());\n            break;\n\n          case 'D':\n            last.push(sets.notInts());\n            break;\n\n          case 's':\n            last.push(sets.whitespace());\n            break;\n\n          case 'S':\n            last.push(sets.notWhitespace());\n            break;\n\n          default:\n            // Check if c is integer.\n            // In which case it's a reference.\n            if (/\\d/.test(c)) {\n              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });\n\n            // Escaped character.\n            } else {\n              last.push({ type: types.CHAR, value: c.charCodeAt(0) });\n            }\n        }\n\n        break;\n\n\n      // Positionals.\n      case '^':\n        last.push(positions.begin());\n        break;\n\n      case '$':\n        last.push(positions.end());\n        break;\n\n\n      // Handle custom sets.\n      case '[':\n        // Check if this class is 'anti' i.e. [^abc].\n        var not;\n        if (str[i] === '^') {\n          not = true;\n          i++;\n        } else {\n          not = false;\n        }\n\n        // Get all the characters in class.\n        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);\n\n        // Increase index by length of class.\n        i += classTokens[1];\n        last.push({\n          type: types.SET,\n          set: classTokens[0],\n          not,\n        });\n\n        break;\n\n\n      // Class of any character except \\n.\n      case '.':\n        last.push(sets.anyChar());\n        break;\n\n\n      // Push group onto stack.\n      case '(':\n        // Create group.\n        var group = {\n          type: types.GROUP,\n          stack: [],\n          remember: true,\n        };\n\n        c = str[i];\n\n        // If if this is a special kind of group.\n        if (c === '?') {\n          c = str[i + 1];\n          i += 2;\n\n          // Match if followed by.\n          if (c === '=') {\n            group.followedBy = true;\n\n          // Match if not followed by.\n          } else if (c === '!') {\n            group.notFollowedBy = true;\n\n          } else if (c !== ':') {\n            util.error(regexpStr,\n              `Invalid group, character '${c}'` +\n              ` after '?' at column ${i - 1}`);\n          }\n\n          group.remember = false;\n        }\n\n        // Insert subgroup into current group stack.\n        last.push(group);\n\n        // Remember the current group for when the group closes.\n        groupStack.push(lastGroup);\n\n        // Make this new group the current group.\n        lastGroup = group;\n        last = group.stack;\n        break;\n\n\n      // Pop group out of stack.\n      case ')':\n        if (groupStack.length === 0) {\n          util.error(regexpStr, `Unmatched ) at column ${i - 1}`);\n        }\n        lastGroup = groupStack.pop();\n\n        // Check if this group has a PIPE.\n        // To get back the correct last stack.\n        last = lastGroup.options ?\n          lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;\n        break;\n\n\n      // Use pipe character to give more choices.\n      case '|':\n        // Create array where options are if this is the first PIPE\n        // in this clause.\n        if (!lastGroup.options) {\n          lastGroup.options = [lastGroup.stack];\n          delete lastGroup.stack;\n        }\n\n        // Create a new stack and add to options for rest of clause.\n        var stack = [];\n        lastGroup.options.push(stack);\n        last = stack;\n        break;\n\n\n      // Repetition.\n      // For every repetition, remove last element from last stack\n      // then insert back a RANGE object.\n      // This design is chosen because there could be more than\n      // one repetition symbols in a regex i.e. `a?+{2,3}`.\n      case '{':\n        var rs = /^(\\d+)(,(\\d+)?)?\\}/.exec(str.slice(i)), min, max;\n        if (rs !== null) {\n          if (last.length === 0) {\n            repeatErr(i);\n          }\n          min = parseInt(rs[1], 10);\n          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;\n          i += rs[0].length;\n\n          last.push({\n            type: types.REPETITION,\n            min,\n            max,\n            value: last.pop(),\n          });\n        } else {\n          last.push({\n            type: types.CHAR,\n            value: 123,\n          });\n        }\n        break;\n\n      case '?':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 0,\n          max: 1,\n          value: last.pop(),\n        });\n        break;\n\n      case '+':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 1,\n          max: Infinity,\n          value: last.pop(),\n        });\n        break;\n\n      case '*':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 0,\n          max: Infinity,\n          value: last.pop(),\n        });\n        break;\n\n\n      // Default is a character that is not `\\[](){}?+*^$`.\n      default:\n        last.push({\n          type: types.CHAR,\n          value: c.charCodeAt(0),\n        });\n    }\n\n  }\n\n  // Check if any groups have not been closed.\n  if (groupStack.length !== 0) {\n    util.error(regexpStr, 'Unterminated group');\n  }\n\n  return start;\n};\n\nmodule.exports.types = types;\n","'use strict';\n/* eslint indent: 4 */\n\n\n// Private helper class\nclass SubRange {\n    constructor(low, high) {\n        this.low = low;\n        this.high = high;\n        this.length = 1 + high - low;\n    }\n\n    overlaps(range) {\n        return !(this.high < range.low || this.low > range.high);\n    }\n\n    touches(range) {\n        return !(this.high + 1 < range.low || this.low - 1 > range.high);\n    }\n\n    // Returns inclusive combination of SubRanges as a SubRange.\n    add(range) {\n        return new SubRange(\n            Math.min(this.low, range.low),\n            Math.max(this.high, range.high)\n        );\n    }\n\n    // Returns subtraction of SubRanges as an array of SubRanges.\n    // (There's a case where subtraction divides it in 2)\n    subtract(range) {\n        if (range.low <= this.low && range.high >= this.high) {\n            return [];\n        } else if (range.low > this.low && range.high < this.high) {\n            return [\n                new SubRange(this.low, range.low - 1),\n                new SubRange(range.high + 1, this.high)\n            ];\n        } else if (range.low <= this.low) {\n            return [new SubRange(range.high + 1, this.high)];\n        } else {\n            return [new SubRange(this.low, range.low - 1)];\n        }\n    }\n\n    toString() {\n        return this.low == this.high ?\n            this.low.toString() : this.low + '-' + this.high;\n    }\n}\n\n\nclass DRange {\n    constructor(a, b) {\n        this.ranges = [];\n        this.length = 0;\n        if (a != null) this.add(a, b);\n    }\n\n    _update_length() {\n        this.length = this.ranges.reduce((previous, range) => {\n            return previous + range.length;\n        }, 0);\n    }\n\n    add(a, b) {\n        var _add = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.touches(this.ranges[i])) {\n                i++;\n            }\n            var newRanges = this.ranges.slice(0, i);\n            while (i < this.ranges.length && subrange.touches(this.ranges[i])) {\n                subrange = subrange.add(this.ranges[i]);\n                i++;\n            }\n            newRanges.push(subrange);\n            this.ranges = newRanges.concat(this.ranges.slice(i));\n            this._update_length();\n        }\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_add);\n        } else {\n            if (b == null) b = a;\n            _add(new SubRange(a, b));\n        }\n        return this;\n    }\n\n    subtract(a, b) {\n        var _subtract = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.overlaps(this.ranges[i])) {\n                i++;\n            }\n            var newRanges = this.ranges.slice(0, i);\n            while (i < this.ranges.length && subrange.overlaps(this.ranges[i])) {\n                newRanges = newRanges.concat(this.ranges[i].subtract(subrange));\n                i++;\n            }\n            this.ranges = newRanges.concat(this.ranges.slice(i));\n            this._update_length();\n        };\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_subtract);\n        } else {\n            if (b == null) b = a;\n            _subtract(new SubRange(a, b));\n        }\n        return this;\n    }\n\n    intersect(a, b) {\n        var newRanges = [];\n        var _intersect = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.overlaps(this.ranges[i])) {\n                i++;\n            }\n            while (i < this.ranges.length && subrange.overlaps(this.ranges[i])) {\n                var low = Math.max(this.ranges[i].low, subrange.low);\n                var high = Math.min(this.ranges[i].high, subrange.high);\n                newRanges.push(new SubRange(low, high));\n                i++;\n            }\n        };\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_intersect);\n        } else {\n            if (b == null) b = a;\n            _intersect(new SubRange(a, b));\n        }\n        this.ranges = newRanges;\n        this._update_length();\n        return this;\n    }\n\n    index(index) {\n        var i = 0;\n        while (i < this.ranges.length && this.ranges[i].length <= index) {\n            index -= this.ranges[i].length;\n            i++;\n        }\n        return this.ranges[i].low + index;\n    }\n\n    toString() {\n        return '[ ' + this.ranges.join(', ') + ' ]';\n    }\n\n    clone() {\n        return new DRange(this);\n    }\n\n    numbers() {\n        return this.ranges.reduce((result, subrange) => {\n            var i = subrange.low;\n            while (i <= subrange.high) {\n                result.push(i);\n                i++;\n            }\n            return result;\n        }, []);\n    }\n\n    subranges() {\n        return this.ranges.map((subrange) => ({\n            low: subrange.low,\n            high: subrange.high,\n            length: 1 + subrange.high - subrange.low\n        }));\n    }\n}\n\nmodule.exports = DRange;\n","'use strict';\n\nconst ret    = require('ret');\nconst DRange = require('drange');\nconst types  = ret.types;\n\n\nmodule.exports = class RandExp {\n  /**\n   * @constructor\n   * @param {RegExp|String} regexp\n   * @param {String} m\n   */\n  constructor(regexp, m) {\n    this._setDefaults(regexp);\n    if (regexp instanceof RegExp) {\n      this.ignoreCase = regexp.ignoreCase;\n      this.multiline = regexp.multiline;\n      regexp = regexp.source;\n\n    } else if (typeof regexp === 'string') {\n      this.ignoreCase = m && m.indexOf('i') !== -1;\n      this.multiline = m && m.indexOf('m') !== -1;\n    } else {\n      throw new Error('Expected a regexp or string');\n    }\n\n    this.tokens = ret(regexp);\n  }\n\n\n  /**\n   * Checks if some custom properties have been set for this regexp.\n   *\n   * @param {RandExp} randexp\n   * @param {RegExp} regexp\n   */\n  _setDefaults(regexp) {\n    // When a repetitional token has its max set to Infinite,\n    // randexp won't actually generate a random amount between min and Infinite\n    // instead it will see Infinite as min + 100.\n    this.max = regexp.max != null ? regexp.max :\n      RandExp.prototype.max != null ? RandExp.prototype.max : 100;\n\n    // This allows expanding to include additional characters\n    // for instance: RandExp.defaultRange.add(0, 65535);\n    this.defaultRange = regexp.defaultRange ?\n      regexp.defaultRange : this.defaultRange.clone();\n\n    if (regexp.randInt) {\n      this.randInt = regexp.randInt;\n    }\n  }\n\n\n  /**\n   * Generates the random string.\n   *\n   * @return {String}\n   */\n  gen() {\n    return this._gen(this.tokens, []);\n  }\n\n\n  /**\n   * Generate random string modeled after given tokens.\n   *\n   * @param {Object} token\n   * @param {Array.<String>} groups\n   * @return {String}\n   */\n  _gen(token, groups) {\n    var stack, str, n, i, l;\n\n    switch (token.type) {\n      case types.ROOT:\n      case types.GROUP:\n        // Ignore lookaheads for now.\n        if (token.followedBy || token.notFollowedBy) { return ''; }\n\n        // Insert placeholder until group string is generated.\n        if (token.remember && token.groupNumber === undefined) {\n          token.groupNumber = groups.push(null) - 1;\n        }\n\n        stack = token.options ?\n          this._randSelect(token.options) : token.stack;\n\n        str = '';\n        for (i = 0, l = stack.length; i < l; i++) {\n          str += this._gen(stack[i], groups);\n        }\n\n        if (token.remember) {\n          groups[token.groupNumber] = str;\n        }\n        return str;\n\n      case types.POSITION:\n        // Do nothing for now.\n        return '';\n\n      case types.SET:\n        var expandedSet = this._expand(token);\n        if (!expandedSet.length) { return ''; }\n        return String.fromCharCode(this._randSelect(expandedSet));\n\n      case types.REPETITION:\n        // Randomly generate number between min and max.\n        n = this.randInt(token.min,\n          token.max === Infinity ? token.min + this.max : token.max);\n\n        str = '';\n        for (i = 0; i < n; i++) {\n          str += this._gen(token.value, groups);\n        }\n\n        return str;\n\n      case types.REFERENCE:\n        return groups[token.value - 1] || '';\n\n      case types.CHAR:\n        var code = this.ignoreCase && this._randBool() ?\n          this._toOtherCase(token.value) : token.value;\n        return String.fromCharCode(code);\n    }\n  }\n\n\n  /**\n   * If code is alphabetic, converts to other case.\n   * If not alphabetic, returns back code.\n   *\n   * @param {Number} code\n   * @return {Number}\n   */\n  _toOtherCase(code) {\n    return code + (97 <= code && code <= 122 ? -32 :\n      65 <= code && code <= 90  ?  32 : 0);\n  }\n\n\n  /**\n   * Randomly returns a true or false value.\n   *\n   * @return {Boolean}\n   */\n  _randBool() {\n    return !this.randInt(0, 1);\n  }\n\n\n  /**\n   * Randomly selects and returns a value from the array.\n   *\n   * @param {Array.<Object>} arr\n   * @return {Object}\n   */\n  _randSelect(arr) {\n    if (arr instanceof DRange) {\n      return arr.index(this.randInt(0, arr.length - 1));\n    }\n    return arr[this.randInt(0, arr.length - 1)];\n  }\n\n\n  /**\n   * expands a token to a DiscontinuousRange of characters which has a\n   * length and an index function (for random selecting)\n   *\n   * @param {Object} token\n   * @return {DiscontinuousRange}\n   */\n  _expand(token) {\n    if (token.type === ret.types.CHAR) {\n      return new DRange(token.value);\n    } else if (token.type === ret.types.RANGE) {\n      return new DRange(token.from, token.to);\n    } else {\n      let drange = new DRange();\n      for (let i = 0; i < token.set.length; i++) {\n        let subrange = this._expand(token.set[i]);\n        drange.add(subrange);\n        if (this.ignoreCase) {\n          for (let j = 0; j < subrange.length; j++) {\n            let code = subrange.index(j);\n            let otherCaseCode = this._toOtherCase(code);\n            if (code !== otherCaseCode) {\n              drange.add(otherCaseCode);\n            }\n          }\n        }\n      }\n      if (token.not) {\n        return this.defaultRange.clone().subtract(drange);\n      } else {\n        return this.defaultRange.clone().intersect(drange);\n      }\n    }\n  }\n\n\n  /**\n   * Randomly generates and returns a number between a and b (inclusive).\n   *\n   * @param {Number} a\n   * @param {Number} b\n   * @return {Number}\n   */\n  randInt(a, b) {\n    return a + Math.floor(Math.random() * (1 + b - a));\n  }\n\n\n  /**\n   * Default range of characters to generate from.\n   */\n  get defaultRange() {\n    return this._range = this._range || new DRange(32, 126);\n  }\n\n  set defaultRange(range) {\n    this._range = range;\n  }\n\n\n  /**\n   *\n   * Enables use of randexp with a shorter call.\n   *\n   * @param {RegExp|String| regexp}\n   * @param {String} m\n   * @return {String}\n   */\n  static randexp(regexp, m) {\n    var randexp;\n    if(typeof regexp === 'string') {\n      regexp = new RegExp(regexp, m);\n    }\n\n    if (regexp._randexp === undefined) {\n      randexp = new RandExp(regexp, m);\n      regexp._randexp = randexp;\n    } else {\n      randexp = regexp._randexp;\n      randexp._setDefaults(regexp);\n    }\n    return randexp.gen();\n  }\n\n\n  /**\n   * Enables sugary /regexp/.gen syntax.\n   */\n  static sugar() {\n    /* eshint freeze:false */\n    RegExp.prototype.gen = function() {\n      return RandExp.randexp(this);\n    };\n  }\n};\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","ROOT","GROUP","POSITION","SET","RANGE","REPETITION","REFERENCE","CHAR","INTS","type","types","from","to","WORDS","value","concat","WHITESPACE","NOTANYCHAR","set","not","SLSH","0","t","n","v","f","r","exports","str","replace","s","lbs","a16","b16","c8","dctrl","eslsh","code","parseInt","indexOf","c","String","fromCharCode","test","regexpStr","rs","tokens","regexp","exec","push","sets","charCodeAt","lastIndex","error","msg","SyntaxError","l","i","start","stack","lastGroup","last","groupStack","repeatErr","util","strToChars","length","positions","classTokens","tokenizeClass","slice","group","remember","followedBy","notFollowedBy","pop","options","min","max","Infinity","SubRange","[object Object]","low","high","this","range","Math","toString","DRange","a","ranges","add","reduce","previous","_add","subrange","touches","newRanges","_update_length","forEach","_subtract","overlaps","subtract","_intersect","index","join","result","map","RandExp","m","_setDefaults","RegExp","ignoreCase","multiline","source","Error","ret","prototype","defaultRange","clone","randInt","_gen","token","groups","undefined","groupNumber","_randSelect","expandedSet","_expand","_randBool","_toOtherCase","arr","drange","j","otherCaseCode","intersect","floor","random","_range","randexp","_randexp","gen","__","constructor","create"],"mappings":"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"}